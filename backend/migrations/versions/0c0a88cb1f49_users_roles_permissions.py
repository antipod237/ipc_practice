"""users roles permissions

Revision ID: 0c0a88cb1f49
Revises: 
Create Date: 2021-03-02 23:37:50.026704

"""
from alembic import op
import sqlalchemy as sa
from passlib.hash import pbkdf2_sha256 as sha256
from uuid import uuid4
from erpsystem.config import (
    ADMIN_DISPLAY_NAME, ADMIN_EMAIL, ADMIN_PASSWORD, ADMIN_USERNAME,
)


# revision identifiers, used by Alembic.
revision = '0c0a88cb1f49'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    t_roles = op.create_table(
        'roles',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('display_name', sa.String(length=64), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('display_name'),
        sa.UniqueConstraint('name')
    )
    t_permissions = op.create_table(
        'permissions',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('app_name', sa.String(length=20), nullable=False),
        sa.Column('action', sa.String(length=20), nullable=False),
        sa.Column('role_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(tuple(['role_id']), ['roles.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    t_users = op.create_table(
        'users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('username', sa.String(length=50), nullable=False),
        sa.Column('password', sa.String(length=120), nullable=False),
        sa.Column('email', sa.String(length=50), nullable=False),
        sa.Column('deactivated', sa.Boolean(), nullable=False),
        sa.Column('display_name', sa.String(length=50), nullable=False),
        sa.Column('path_to_image', sa.String(length=120), nullable=True),
        sa.Column('session', sa.String(length=36), nullable=False),
        sa.Column('role_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(tuple(['role_id']), ['roles.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
        sa.UniqueConstraint('username')
    )

    connection = op.get_bind()

    connection.execute(
        sa.insert(t_roles).values([
            {
                'name': 'admin',
                'display_name': 'Администратор',
            },
            {
                'name': 'sales department',
                'display_name': 'Отдел продаж',
            },
            {
                'name': 'logistics department',
                'display_name': 'Отдел логистики',
            },
            {
                'name': 'purchasing department',
                'display_name': 'Отдел закупок',
            },
            {
                'name': 'demo',
                'display_name': 'Демо',
            },
        ])
    )

    connection.execute(
        sa.insert(t_permissions).values([
            # admin
            {'app_name': 'users', 'action': 'all', 'role_id': 1},
            {'app_name': 'stores', 'action': 'all', 'role_id': 1},
            {'app_name': 'sales', 'action': 'all', 'role_id': 1},
            {'app_name': 'contracts', 'action': 'all', 'role_id': 1},
            {'app_name': 'suppliers', 'action': 'all', 'role_id': 1},
            {'app_name': 'purchases', 'action': 'all', 'role_id': 1},
            {'app_name': 'store_items', 'action': 'all', 'role_id': 1},

            #sales department
            {'app_name': 'users', 'action': 'get', 'role_id': 2},
            {'app_name': 'stores', 'action': 'get', 'role_id': 2},
            {'app_name': 'sales', 'action': 'create', 'role_id': 2},
            {'app_name': 'sales', 'action': 'update', 'role_id': 2},
            {'app_name': 'contracts', 'action': 'get', 'role_id': 2},
            {'app_name': 'suppliers', 'action': 'get', 'role_id': 2},
            {'app_name': 'purchases', 'action': 'get', 'role_id': 2},
            {'app_name': 'store_items', 'action': 'all', 'role_id': 2},

            #logistics department
            {'app_name': 'users', 'action': 'get', 'role_id': 3},
            {'app_name': 'stores', 'action': 'get', 'role_id': 3},
            {'app_name': 'sales', 'action': 'get', 'role_id': 3},
            {'app_name': 'contracts', 'action': 'get', 'role_id': 3},
            {'app_name': 'suppliers', 'action': 'get', 'role_id': 3},
            {'app_name': 'purchases', 'action': 'get', 'role_id': 3},
            {'app_name': 'store_items', 'action': 'update', 'role_id': 3},

            #purchasing department
            {'app_name': 'users', 'action': 'get', 'role_id': 4},
            {'app_name': 'stores', 'action': 'get', 'role_id': 4},
            {'app_name': 'sales', 'action': 'get', 'role_id': 4},
            {'app_name': 'contracts', 'action': 'all', 'role_id': 4},
            {'app_name': 'suppliers', 'action': 'all', 'role_id': 4},
            {'app_name': 'purchases', 'action': 'all', 'role_id': 4},
            {'app_name': 'store_items', 'action': 'get', 'role_id': 4},
            
            # demo
            {'app_name': 'users', 'action': 'get', 'role_id': 5},
            {'app_name': 'stores', 'action': 'get', 'role_id': 5},
            {'app_name': 'sales', 'action': 'get', 'role_id': 5},
            {'app_name': 'contracts', 'action': 'get', 'role_id': 5},
            {'app_name': 'suppliers', 'action': 'get', 'role_id': 5},
            {'app_name': 'purchases', 'action': 'get', 'role_id': 5},
            {'app_name': 'store_items', 'action': 'get', 'role_id': 5},
        ])
    )

    connection.execute(
        sa.insert(t_users).values([
            {
                'username': ADMIN_USERNAME,
                'password': sha256.hash(ADMIN_PASSWORD),
                'email': ADMIN_EMAIL,
                'display_name': ADMIN_DISPLAY_NAME,
                'session': str(uuid4()),
                'deactivated': False,
                'role_id': 1,
            },
            {
                'username': 'sales department',
                'password': sha256.hash('sales_department'),
                'email': 'salesdepartment@erpsystem.ru',
                'display_name': 'Отдел продаж',
                'session': str(uuid4()),
                'deactivated': False,
                'role_id': 2,
            },
            {
                'username': 'logistics department',
                'password': sha256.hash('sales_department'),
                'email': 'logisticsdepartment@erpsystem.ru',
                'display_name': 'Отдел логистики',
                'session': str(uuid4()),
                'deactivated': False,
                'role_id': 3,
            },
            {
                'username': 'purchasing department',
                'password': sha256.hash('purchasing_department'),
                'email': 'purchasingdepartment@erpsystem.ru',
                'display_name': 'Отдел закупок',
                'session': str(uuid4()),
                'deactivated': False,
                'role_id': 4,
            },
            {
                'username': 'demo',
                'password': sha256.hash('demo'),
                'email': 'demo@erpsystem.ru',
                'display_name': 'Демо',
                'session': str(uuid4()),
                'deactivated': False,
                'role_id': 5,
            },
        ])
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('permissions')
    op.drop_table('roles')
    # ### end Alembic commands ###
